on:
  push:
    branches:
      - release

jobs:
  download-dependecies:
     runs-on: ubuntu-latest
     steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Save in cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules-
      - name: Install dependencies
        run: npm install

  build:
     needs: [download-dependecies]
     runs-on: ubuntu-latest
     outputs:
      artifactId: ${{ steps.artifact-upload-step.outputs.artifact-id }}
      artifactURL: ${{ steps.artifact-upload-step.outputs.artifact-url }}
     steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Restore from cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules-
      - name: check dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Upload artifact
        id: artifact-upload-step
        uses: actions/upload-artifact@v4
        with:
           name: build-artifact
           path: ./dist

  trigger:
     needs: [build]
     runs-on: ubuntu-latest
     env:
      ARTIFACT_ID: ${{needs.build.outputs.artifactId}}
      ARTIFACT_URL: ${{needs.build.outputs.artifactURL}}
     steps:
      - name: Check env
        run: |
          echo "Artifact URL from previous job is $ARTIFACT_URL"
          echo "Test ${{secrets.API_URL}}"
          echo "Test ${{secrets.API_TOKEN}}"
          env
      - name: curl
        run: echo 'curl -X -F ARTIFACT_URL=$ARTIFACT_URL -F API_TOKEN=${{secrets.API_TOKEN}} ${{secrets.API_URL}}'
        
          
